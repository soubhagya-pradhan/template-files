static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: ${ENVOY_PORT}
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          access_log:
            - name: envoy.access_loggers.stdout
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: local_route
            virtual_hosts:
            - name: upstream
              request_headers_to_remove:
                - x-auth-introspect-value
                - x-auth-request-access-token
                - origin                
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/usermanagementapp/usermanagement"
                request_headers_to_remove:
                  - edisp-introspect-value                  
                route:
                  cluster: iam-admin-usermanagement
              - match:
                  prefix: "/usermanagementapp"
                request_headers_to_remove:
                  - edisp-introspect-value                      
                route:
                  cluster: iam-admin-hostapp     
              - match:
                  prefix: "/logout"
                request_headers_to_add:
                  - header:
                      key: "X-Auth-Request-Redirect"
                      value: ${IAM_TERMINATE_SESSION_URL}
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                   "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                   disabled: true
                route:
                  cluster: oauth-proxy-service
                  prefix_rewrite: "/oauth2/sign_out"
              - match:
                  prefix: "/oauth2/callback"
                route:
                  cluster: oauth-proxy-service 
              - match:
                  prefix: "/configuration"
                route:
                  cluster: configuration_service         
              - match:
                  prefix: "/tokenvalidator"
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                   "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                   disabled: true                  
                route:
                  cluster: token_validator 
              - match:
                  prefix: "/authorize"           
                request_headers_to_remove:
                  - edisp-introspect-value
                route:
                  cluster: hsdp-iam
                  host_rewrite_literal: ${IAM_ENDPOINT}
              - match:
                  prefix: "/security"
                request_headers_to_remove:
                  - edisp-introspect-value
                route:
                  cluster: hsdp-iam
                  host_rewrite_literal: ${IAM_ENDPOINT}
              - match:
                  prefix: "/pushgateway"
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                   "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                   disabled: true
                route:
                  cluster: push_gateway
                  prefix_rewrite: "/"                                          
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                   local library = require("lib.envoyLibrary")
                   library.SelectAuthenticationFlow(request_handle)
                end
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              http_service:
                server_uri:
                  uri:  ${OAUTH_PROXY_ENDPOINT}:${OAUTH_PROXY_PORT}
                  cluster: oauth-proxy-service
                  timeout: ${TimeoutInSeconds}
                authorization_request:
                  allowed_headers:
                    patterns:
                     - exact: cookie
                     - prefix: x-
                authorization_response:
                  allowed_client_headers_on_success:
                    patterns:
                     - exact: set-cookie
                     - prefix: x-auth-introspect
                  allowed_upstream_headers:
                    patterns:
                     - exact: set-cookie
                     - prefix: x-auth-request-access
                     - prefix: x-auth-introspect
              filter_enabled_metadata:
                filter: envoy.filters.http.ext_authz
                path:
                - key: login_flow
                value:
                  bool_match: true
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              http_service:
                server_uri:
                  uri:  ${AUTHENTICATOR_ENDPOINT}:${AUTHENTICATOR_PORT}
                  cluster: authenticator
                  timeout: ${TimeoutInSeconds}
                authorization_request:
                  allowed_headers:
                    patterns:
                     - prefix: auth
                authorization_response:
                  allowed_upstream_headers:
                    patterns:
                     - prefix: x-auth-introspect
              filter_enabled_metadata:
                filter: envoy.filters.http.ext_authz
                path:
                - key: access_token_flow
                value:
                  bool_match: true
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                   local library = require("lib.envoyLibrary")
                   library.setAccessToken(request_handle)
                   library.setIntrospectionValue(request_handle)
                end
          - name: envoy.filters.http.router
            typed_config: {}
  clusters:
  - name: push_gateway
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: push_gateway
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${PUSHGATEWAY_ENDPOINT}
                port_value: ${PUSHGATEWAY_PORT}
  - name: configuration_service
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: configuration_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${CONFIGURATION_SERVICE_ENDPOINT}
                port_value: ${CONFIGURATION_SERVICE_PORT}    
  - name: token_validator
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: token_validator
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${TOKEN_VALIDATOR_ENDPOINT}
                port_value: ${TOKEN_VALIDATOR_PORT}                                                                                
  - name: oauth-proxy-service
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    load_assignment:
      cluster_name: oauth-proxy-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${OAUTH_PROXY_ENDPOINT}
                port_value: ${OAUTH_PROXY_PORT}
  - name: authenticator
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: authenticator
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${AUTHENTICATOR_ENDPOINT}
                port_value: ${AUTHENTICATOR_PORT}
  - name: iam-admin-hostapp
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    load_assignment:
      cluster_name: iam-admin-hostapp
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${IAM_ADMIN_HOSTAPP_ENDPOINT}
                port_value: ${IAM_ADMIN_HOSTAPP_PORT}
  - name: iam-admin-usermanagement
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    load_assignment:
      cluster_name: iam-admin-usermanagement
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${IAM_ADMIN_USERMANAGEMENT_ENDPOINT}
                port_value: ${IAM_ADMIN_USERMANAGEMENT_PORT}
  - name: hsdp-iam
    connect_timeout: ${TimeoutInSeconds}
    type: logical_dns
    load_assignment:
      cluster_name: hsdp-iam
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ${IAM_ENDPOINT}
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: /etc/ssl/certs/ca-certificates.crt
            match_subject_alt_names:
              - exact: ${IAM_ENDPOINT}


admin:
  access_log_path: '/dev/stdout'
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9090